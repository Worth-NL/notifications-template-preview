{%- set app_vars = {
  'notify-template-preview-celery': {},
  'notify-template-preview-celery-ecs-fixup': {
    'additional_env_vars': {
      'NOTIFICATION_QUEUE_PREFIX': ('production-' if environment == 'production' else (NOTIFICATION_QUEUE_PREFIX + '-ecs')),
    },
    'instances': {
      'preview': 0,
      'staging': 0,
      'production': 0,
    },
  },
} -%}

{%- set app = app_vars[CF_APP] -%}
{%- set instance_count = app.get('instances', {}).get(environment) -%}
---
applications:
- name: {{ CF_APP }}

  {% if instance_count is not none %}
  instances: {{ instance_count }}
  {%- endif %}

  disk_quota: 2G
  memory: 4G
  health-check-type: process
  command: exec scripts/run_app_paas.sh celery -A run_celery.notify_celery worker --loglevel=INFO --concurrency=4 2> /dev/null

  services:
    - logit-ssl-syslog-drain

  routes:
    - route: {{ environment }}-{{ CF_APP }}.cloudapps.digital


  env:
    NOTIFY_ENVIRONMENT: {{ environment }}

    NOTIFY_APP_NAME: {{ app.get('NOTIFY_APP_NAME', CF_APP.replace('notify-', '')) }}
    NOTIFY_LOG_PATH: /home/vcap/logs/app.log

    NOTIFICATION_QUEUE_PREFIX: {{ NOTIFICATION_QUEUE_PREFIX }}

    AWS_ACCESS_KEY_ID: {{ AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: {{ AWS_SECRET_ACCESS_KEY }}

    TEMPLATE_PREVIEW_INTERNAL_SECRETS: {{ TEMPLATE_PREVIEW_INTERNAL_SECRETS | tojson }}

    DANGEROUS_SALT: {{ DANGEROUS_SALT }}
    SECRET_KEY: {{ SECRET_KEY }}

    STATSD_ENABLED: 1
    STATSD_HOST: 'notify-statsd-exporter-{{ environment }}.apps.internal'

    SENTRY_ENABLED: '{{ TEMPLATE_PREVIEW_SENTRY_ENABLED }}'
    SENTRY_DSN: '{{ TEMPLATE_PREVIEW_SENTRY_DSN }}'
    SENTRY_ERRORS_SAMPLE_RATE: '{{ TEMPLATE_PREVIEW_SENTRY_ERRORS_SAMPLE_RATE }}'
    SENTRY_TRACES_SAMPLE_RATE: '{{ TEMPLATE_PREVIEW_SENTRY_TRACES_SAMPLE_RATE }}'
    SENTRY_PROFILES_SAMPLE_RATE: '{{ TEMPLATE_PREVIEW_SENTRY_PROFILES_SAMPLE_RATE }}'

    {% for key, value in app.get('additional_env_vars', {}).items() %}
    {{key}}: '{{value}}'
    {% endfor %}
